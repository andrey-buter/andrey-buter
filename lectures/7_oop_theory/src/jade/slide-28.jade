section.slide.slide-prism 
	pre.line-numbers
		code.language-javascript.
			// capacity - ёмкость кофеварки
			function CoffeeMachine( power, capacity ) {
				var waterAmount = 0;
				var WATER_HEAT_CAPACITY = 4200;

				function getTimeToBoil() {
					return waterAmount * WATER_HEAT_CAPACITY * 80 / power;
				}

				// Для большего удобства иногда делают единый метод, 
				// который называется так же, как свойство и отвечает и за запись и за чтение.
				// При вызове без параметров такой метод возвращает свойство, 
				// а при передаче параметра – назначает его.
				this.waterAmount = function( amount ) {
					// вызов без параметра, значит режим геттера, возвращаем свойство
					if ( !arguments.length ) 
						return waterAmount;

					// иначе режим сеттера
					if ( amount < 0 ) 
						throw new Error( "Значение должно быть положительным" );
					
					if ( amount > capacity )
						throw new Error( "Нельзя залить воды больше, чем " + capacity );

					waterAmount = amount;
				};

				// Единый геттер-сеттер используется реже, чем две отдельные функции, 
				// но в некоторых JavaScript-библиотеках, например, jQuery 
				// подобный подход принят на уровне концепта.
				

				function onReady() { alert( 'Кофе готов!' ); }

				this.run = function() { setTimeout( onReady, getTimeToBoil() ); };
			}

			var capacity = 500; // capacity - ёмкость кофеварки
			var coffeeMachine = new CoffeeMachine( 1000, capacity );
			
			// пример использования
			coffeeMachine.waterAmount(450);
			alert( coffeeMachine.waterAmount() ); // 450
			 